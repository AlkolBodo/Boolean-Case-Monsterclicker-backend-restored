// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonsterClickerAPI.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MonsterClickerAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240321132648_Final")]
    partial class Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MonsterClickerAPI.Enumfolder.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item_name");

                    b.Property<string>("ItemSpriteUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item_sprite_url");

                    b.Property<float>("Value")
                        .HasColumnType("real")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemName = "Bone",
                            ItemSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Broken%20Disgusting%20Fork",
                            Value = 16f
                        },
                        new
                        {
                            Id = 2,
                            ItemName = "Blob",
                            ItemSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Ancient%20Sweet%20Bag",
                            Value = 16f
                        },
                        new
                        {
                            Id = 3,
                            ItemName = "Spirit energy",
                            ItemSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Fossilized%20Banana",
                            Value = 10f
                        },
                        new
                        {
                            Id = 4,
                            ItemName = "Scrap",
                            ItemSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Grand%20Old%20Bag",
                            Value = 1f
                        });
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Location")
                        .HasColumnType("integer")
                        .HasColumnName("world_location");

                    b.Property<string>("MonsterName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("monster_name");

                    b.Property<string>("MonsterSpriteUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("monster_sprite_ulr");

                    b.HasKey("Id");

                    b.ToTable("monster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = 0,
                            MonsterName = "Mass of Bones",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Broken%20Amulet.png"
                        },
                        new
                        {
                            Id = 2,
                            Location = 0,
                            MonsterName = "Fallen Angel",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Broken%20Disgusting%20Fork.png"
                        },
                        new
                        {
                            Id = 3,
                            Location = 0,
                            MonsterName = "Crypt Bat",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Ancient%20Sweet%20Bag.png"
                        },
                        new
                        {
                            Id = 4,
                            Location = 0,
                            MonsterName = "Purple Demon",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Fossilized%20Banana.png"
                        },
                        new
                        {
                            Id = 5,
                            Location = 0,
                            MonsterName = "Starfish Lich",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Grand%20Old%20Bag.png"
                        },
                        new
                        {
                            Id = 6,
                            Location = 0,
                            MonsterName = "Wraith",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Huge%20Book.png"
                        },
                        new
                        {
                            Id = 7,
                            Location = 0,
                            MonsterName = "Valkyrie",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Overlord%20(1).png"
                        },
                        new
                        {
                            Id = 8,
                            Location = 0,
                            MonsterName = "Vengeful chimera",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Salty%20Beet.png"
                        },
                        new
                        {
                            Id = 9,
                            Location = 0,
                            MonsterName = "Arms",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Sweet%20Sunflower.png"
                        },
                        new
                        {
                            Id = 10,
                            Location = 0,
                            MonsterName = "Broken warrior",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Terrible%20Artichoke.png"
                        },
                        new
                        {
                            Id = 11,
                            Location = 1,
                            MonsterName = "Possessed Corn",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Big%20Corn.png"
                        },
                        new
                        {
                            Id = 12,
                            Location = 1,
                            MonsterName = "Haunted Beetle",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Dark%20Amulet.png"
                        },
                        new
                        {
                            Id = 13,
                            Location = 1,
                            MonsterName = "Corrupted Mantis",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Ancient%20Shallot.png"
                        },
                        new
                        {
                            Id = 14,
                            Location = 1,
                            MonsterName = "Toxic Presence",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Huge%20Fork.png"
                        },
                        new
                        {
                            Id = 15,
                            Location = 1,
                            MonsterName = "Corrupted spider",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Massive%20Pencil.png"
                        },
                        new
                        {
                            Id = 16,
                            Location = 1,
                            MonsterName = "Corrupting fungus",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Quartz%20Cloud.png"
                        },
                        new
                        {
                            Id = 17,
                            Location = 1,
                            MonsterName = "Mysterious Bread",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Mysterious%20Bread.png"
                        },
                        new
                        {
                            Id = 18,
                            Location = 1,
                            MonsterName = "Corrupted lizard",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Small%20Sandals.png"
                        },
                        new
                        {
                            Id = 19,
                            Location = 1,
                            MonsterName = "Farm golem",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Stone%20Carrot.png"
                        },
                        new
                        {
                            Id = 20,
                            Location = 1,
                            MonsterName = "Forgotten farmer",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Spicy%20Sandals%20of%20Purifying.png"
                        },
                        new
                        {
                            Id = 21,
                            Location = 2,
                            MonsterName = "Ancient golem",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Cheesy%20Broccoli.png"
                        },
                        new
                        {
                            Id = 22,
                            Location = 2,
                            MonsterName = "Azure Ghoul",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Crusty%20Beautiful%20Vitamins.png"
                        },
                        new
                        {
                            Id = 23,
                            Location = 2,
                            MonsterName = "Cannonhead",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Dark%20Metal%20Alien.png"
                        },
                        new
                        {
                            Id = 24,
                            Location = 2,
                            MonsterName = "Futuristic frog",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Floating%20Banana.png"
                        },
                        new
                        {
                            Id = 25,
                            Location = 2,
                            MonsterName = "Surveilance Drone",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Fresh%20Cheesy%20Pepper.png"
                        },
                        new
                        {
                            Id = 26,
                            Location = 2,
                            MonsterName = "PK-3000",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Light%20Gem.png"
                        },
                        new
                        {
                            Id = 27,
                            Location = 2,
                            MonsterName = "Atlantian spirit",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Salty%20Banana.png"
                        },
                        new
                        {
                            Id = 28,
                            Location = 2,
                            MonsterName = "Emerald squid",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Spicy%20Quartz%20Sunflower.png"
                        },
                        new
                        {
                            Id = 29,
                            Location = 2,
                            MonsterName = "Sentient shrine",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Toxic%20Wooden%20Finger.png"
                        },
                        new
                        {
                            Id = 30,
                            Location = 2,
                            MonsterName = "Watcher",
                            MonsterSpriteUrl = "https://raw.githubusercontent.com/AlkolBodo/Boolean-Case-Monsterclicker-backend-restored/main/monsters/Sprites/Unique%20Squash.png"
                        });
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.MonsterItemTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("DropRate")
                        .HasColumnType("real")
                        .HasColumnName("drop_rate");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<int>("MaxDrop")
                        .HasColumnType("integer")
                        .HasColumnName("max_drop");

                    b.Property<int>("MinDrop")
                        .HasColumnType("integer")
                        .HasColumnName("min_drop");

                    b.Property<int>("MonsterId")
                        .HasColumnType("integer")
                        .HasColumnName("monster_id");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MonsterId");

                    b.ToTable("monster_item_table");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DropRate = 22f,
                            ItemId = 1,
                            MaxDrop = 7,
                            MinDrop = 3,
                            MonsterId = 1
                        },
                        new
                        {
                            Id = 2,
                            DropRate = 60f,
                            ItemId = 2,
                            MaxDrop = 6,
                            MinDrop = 3,
                            MonsterId = 2
                        },
                        new
                        {
                            Id = 3,
                            DropRate = 39f,
                            ItemId = 1,
                            MaxDrop = 6,
                            MinDrop = 4,
                            MonsterId = 2
                        },
                        new
                        {
                            Id = 4,
                            DropRate = 30f,
                            ItemId = 4,
                            MaxDrop = 6,
                            MinDrop = 2,
                            MonsterId = 3
                        },
                        new
                        {
                            Id = 5,
                            DropRate = 55f,
                            ItemId = 2,
                            MaxDrop = 5,
                            MinDrop = 4,
                            MonsterId = 4
                        },
                        new
                        {
                            Id = 6,
                            DropRate = 40f,
                            ItemId = 3,
                            MaxDrop = 7,
                            MinDrop = 4,
                            MonsterId = 5
                        },
                        new
                        {
                            Id = 7,
                            DropRate = 78f,
                            ItemId = 2,
                            MaxDrop = 2,
                            MinDrop = 1,
                            MonsterId = 6
                        },
                        new
                        {
                            Id = 8,
                            DropRate = 43f,
                            ItemId = 4,
                            MaxDrop = 3,
                            MinDrop = 1,
                            MonsterId = 7
                        },
                        new
                        {
                            Id = 9,
                            DropRate = 72f,
                            ItemId = 3,
                            MaxDrop = 5,
                            MinDrop = 2,
                            MonsterId = 7
                        },
                        new
                        {
                            Id = 10,
                            DropRate = 34f,
                            ItemId = 1,
                            MaxDrop = 2,
                            MinDrop = 1,
                            MonsterId = 8
                        },
                        new
                        {
                            Id = 11,
                            DropRate = 38f,
                            ItemId = 1,
                            MaxDrop = 3,
                            MinDrop = 2,
                            MonsterId = 9
                        },
                        new
                        {
                            Id = 12,
                            DropRate = 55f,
                            ItemId = 4,
                            MaxDrop = 6,
                            MinDrop = 3,
                            MonsterId = 9
                        },
                        new
                        {
                            Id = 13,
                            DropRate = 29f,
                            ItemId = 3,
                            MaxDrop = 5,
                            MinDrop = 2,
                            MonsterId = 10
                        },
                        new
                        {
                            Id = 14,
                            DropRate = 75f,
                            ItemId = 4,
                            MaxDrop = 4,
                            MinDrop = 3,
                            MonsterId = 11
                        },
                        new
                        {
                            Id = 15,
                            DropRate = 47f,
                            ItemId = 3,
                            MaxDrop = 6,
                            MinDrop = 2,
                            MonsterId = 12
                        },
                        new
                        {
                            Id = 16,
                            DropRate = 74f,
                            ItemId = 4,
                            MaxDrop = 3,
                            MinDrop = 1,
                            MonsterId = 13
                        },
                        new
                        {
                            Id = 17,
                            DropRate = 76f,
                            ItemId = 1,
                            MaxDrop = 8,
                            MinDrop = 4,
                            MonsterId = 14
                        },
                        new
                        {
                            Id = 18,
                            DropRate = 23f,
                            ItemId = 1,
                            MaxDrop = 5,
                            MinDrop = 2,
                            MonsterId = 15
                        },
                        new
                        {
                            Id = 19,
                            DropRate = 44f,
                            ItemId = 4,
                            MaxDrop = 5,
                            MinDrop = 4,
                            MonsterId = 15
                        },
                        new
                        {
                            Id = 20,
                            DropRate = 55f,
                            ItemId = 2,
                            MaxDrop = 4,
                            MinDrop = 1,
                            MonsterId = 16
                        },
                        new
                        {
                            Id = 21,
                            DropRate = 33f,
                            ItemId = 3,
                            MaxDrop = 6,
                            MinDrop = 4,
                            MonsterId = 16
                        },
                        new
                        {
                            Id = 22,
                            DropRate = 39f,
                            ItemId = 4,
                            MaxDrop = 7,
                            MinDrop = 3,
                            MonsterId = 17
                        },
                        new
                        {
                            Id = 23,
                            DropRate = 36f,
                            ItemId = 2,
                            MaxDrop = 6,
                            MinDrop = 2,
                            MonsterId = 17
                        },
                        new
                        {
                            Id = 24,
                            DropRate = 67f,
                            ItemId = 4,
                            MaxDrop = 4,
                            MinDrop = 2,
                            MonsterId = 18
                        },
                        new
                        {
                            Id = 25,
                            DropRate = 33f,
                            ItemId = 4,
                            MaxDrop = 7,
                            MinDrop = 3,
                            MonsterId = 19
                        },
                        new
                        {
                            Id = 26,
                            DropRate = 49f,
                            ItemId = 3,
                            MaxDrop = 3,
                            MinDrop = 2,
                            MonsterId = 20
                        },
                        new
                        {
                            Id = 27,
                            DropRate = 43f,
                            ItemId = 4,
                            MaxDrop = 6,
                            MinDrop = 3,
                            MonsterId = 20
                        },
                        new
                        {
                            Id = 28,
                            DropRate = 79f,
                            ItemId = 4,
                            MaxDrop = 7,
                            MinDrop = 3,
                            MonsterId = 21
                        },
                        new
                        {
                            Id = 29,
                            DropRate = 39f,
                            ItemId = 3,
                            MaxDrop = 4,
                            MinDrop = 3,
                            MonsterId = 22
                        },
                        new
                        {
                            Id = 30,
                            DropRate = 28f,
                            ItemId = 3,
                            MaxDrop = 3,
                            MinDrop = 2,
                            MonsterId = 23
                        },
                        new
                        {
                            Id = 31,
                            DropRate = 21f,
                            ItemId = 2,
                            MaxDrop = 4,
                            MinDrop = 3,
                            MonsterId = 23
                        },
                        new
                        {
                            Id = 32,
                            DropRate = 20f,
                            ItemId = 2,
                            MaxDrop = 6,
                            MinDrop = 2,
                            MonsterId = 24
                        },
                        new
                        {
                            Id = 33,
                            DropRate = 20f,
                            ItemId = 4,
                            MaxDrop = 6,
                            MinDrop = 2,
                            MonsterId = 24
                        },
                        new
                        {
                            Id = 34,
                            DropRate = 30f,
                            ItemId = 2,
                            MaxDrop = 7,
                            MinDrop = 3,
                            MonsterId = 25
                        },
                        new
                        {
                            Id = 35,
                            DropRate = 33f,
                            ItemId = 3,
                            MaxDrop = 5,
                            MinDrop = 3,
                            MonsterId = 26
                        },
                        new
                        {
                            Id = 36,
                            DropRate = 56f,
                            ItemId = 1,
                            MaxDrop = 5,
                            MinDrop = 1,
                            MonsterId = 27
                        },
                        new
                        {
                            Id = 37,
                            DropRate = 53f,
                            ItemId = 3,
                            MaxDrop = 5,
                            MinDrop = 3,
                            MonsterId = 28
                        },
                        new
                        {
                            Id = 38,
                            DropRate = 23f,
                            ItemId = 4,
                            MaxDrop = 5,
                            MinDrop = 4,
                            MonsterId = 28
                        },
                        new
                        {
                            Id = 39,
                            DropRate = 60f,
                            ItemId = 4,
                            MaxDrop = 4,
                            MinDrop = 1,
                            MonsterId = 29
                        },
                        new
                        {
                            Id = 40,
                            DropRate = 28f,
                            ItemId = 3,
                            MaxDrop = 8,
                            MinDrop = 4,
                            MonsterId = 29
                        },
                        new
                        {
                            Id = 41,
                            DropRate = 45f,
                            ItemId = 4,
                            MaxDrop = 3,
                            MinDrop = 1,
                            MonsterId = 30
                        },
                        new
                        {
                            Id = 42,
                            DropRate = 75f,
                            ItemId = 2,
                            MaxDrop = 4,
                            MinDrop = 3,
                            MonsterId = 30
                        });
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.MonsterStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("BaseHealth")
                        .HasColumnType("real")
                        .HasColumnName("basehealth");

                    b.Property<float>("ExtraHealth")
                        .HasColumnType("real")
                        .HasColumnName("extra_health");

                    b.Property<int>("GoldDrop")
                        .HasColumnType("integer")
                        .HasColumnName("gold_drop");

                    b.Property<int>("MonsterId")
                        .HasColumnType("integer")
                        .HasColumnName("monster_id");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("monster_stats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseHealth = 8f,
                            ExtraHealth = 5f,
                            GoldDrop = 1,
                            MonsterId = 1
                        },
                        new
                        {
                            Id = 2,
                            BaseHealth = 9f,
                            ExtraHealth = 5f,
                            GoldDrop = 2,
                            MonsterId = 2
                        },
                        new
                        {
                            Id = 3,
                            BaseHealth = 5f,
                            ExtraHealth = 8f,
                            GoldDrop = 3,
                            MonsterId = 3
                        },
                        new
                        {
                            Id = 4,
                            BaseHealth = 9f,
                            ExtraHealth = 6f,
                            GoldDrop = 1,
                            MonsterId = 4
                        },
                        new
                        {
                            Id = 5,
                            BaseHealth = 6f,
                            ExtraHealth = 9f,
                            GoldDrop = 2,
                            MonsterId = 5
                        },
                        new
                        {
                            Id = 6,
                            BaseHealth = 7f,
                            ExtraHealth = 9f,
                            GoldDrop = 3,
                            MonsterId = 6
                        },
                        new
                        {
                            Id = 7,
                            BaseHealth = 8f,
                            ExtraHealth = 9f,
                            GoldDrop = 2,
                            MonsterId = 7
                        },
                        new
                        {
                            Id = 8,
                            BaseHealth = 6f,
                            ExtraHealth = 9f,
                            GoldDrop = 2,
                            MonsterId = 8
                        },
                        new
                        {
                            Id = 9,
                            BaseHealth = 7f,
                            ExtraHealth = 7f,
                            GoldDrop = 3,
                            MonsterId = 9
                        },
                        new
                        {
                            Id = 10,
                            BaseHealth = 7f,
                            ExtraHealth = 5f,
                            GoldDrop = 2,
                            MonsterId = 10
                        },
                        new
                        {
                            Id = 11,
                            BaseHealth = 5f,
                            ExtraHealth = 8f,
                            GoldDrop = 3,
                            MonsterId = 11
                        },
                        new
                        {
                            Id = 12,
                            BaseHealth = 8f,
                            ExtraHealth = 7f,
                            GoldDrop = 2,
                            MonsterId = 12
                        },
                        new
                        {
                            Id = 13,
                            BaseHealth = 5f,
                            ExtraHealth = 7f,
                            GoldDrop = 2,
                            MonsterId = 13
                        },
                        new
                        {
                            Id = 14,
                            BaseHealth = 9f,
                            ExtraHealth = 6f,
                            GoldDrop = 1,
                            MonsterId = 14
                        },
                        new
                        {
                            Id = 15,
                            BaseHealth = 5f,
                            ExtraHealth = 6f,
                            GoldDrop = 2,
                            MonsterId = 15
                        },
                        new
                        {
                            Id = 16,
                            BaseHealth = 7f,
                            ExtraHealth = 5f,
                            GoldDrop = 1,
                            MonsterId = 16
                        },
                        new
                        {
                            Id = 17,
                            BaseHealth = 7f,
                            ExtraHealth = 8f,
                            GoldDrop = 4,
                            MonsterId = 17
                        },
                        new
                        {
                            Id = 18,
                            BaseHealth = 9f,
                            ExtraHealth = 6f,
                            GoldDrop = 2,
                            MonsterId = 18
                        },
                        new
                        {
                            Id = 19,
                            BaseHealth = 9f,
                            ExtraHealth = 5f,
                            GoldDrop = 1,
                            MonsterId = 19
                        },
                        new
                        {
                            Id = 20,
                            BaseHealth = 5f,
                            ExtraHealth = 5f,
                            GoldDrop = 1,
                            MonsterId = 20
                        },
                        new
                        {
                            Id = 21,
                            BaseHealth = 8f,
                            ExtraHealth = 8f,
                            GoldDrop = 4,
                            MonsterId = 21
                        },
                        new
                        {
                            Id = 22,
                            BaseHealth = 5f,
                            ExtraHealth = 9f,
                            GoldDrop = 3,
                            MonsterId = 22
                        },
                        new
                        {
                            Id = 23,
                            BaseHealth = 6f,
                            ExtraHealth = 5f,
                            GoldDrop = 4,
                            MonsterId = 23
                        },
                        new
                        {
                            Id = 24,
                            BaseHealth = 5f,
                            ExtraHealth = 6f,
                            GoldDrop = 2,
                            MonsterId = 24
                        },
                        new
                        {
                            Id = 25,
                            BaseHealth = 9f,
                            ExtraHealth = 6f,
                            GoldDrop = 3,
                            MonsterId = 25
                        },
                        new
                        {
                            Id = 26,
                            BaseHealth = 7f,
                            ExtraHealth = 8f,
                            GoldDrop = 4,
                            MonsterId = 26
                        },
                        new
                        {
                            Id = 27,
                            BaseHealth = 6f,
                            ExtraHealth = 9f,
                            GoldDrop = 1,
                            MonsterId = 27
                        },
                        new
                        {
                            Id = 28,
                            BaseHealth = 8f,
                            ExtraHealth = 6f,
                            GoldDrop = 1,
                            MonsterId = 28
                        },
                        new
                        {
                            Id = 29,
                            BaseHealth = 5f,
                            ExtraHealth = 5f,
                            GoldDrop = 2,
                            MonsterId = 29
                        },
                        new
                        {
                            Id = 30,
                            BaseHealth = 8f,
                            ExtraHealth = 5f,
                            GoldDrop = 2,
                            MonsterId = 30
                        });
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.PlayerInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("player_inventory");
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.PlayerStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("ClickDamage")
                        .HasColumnType("real")
                        .HasColumnName("click_damage");

                    b.Property<float>("CritChance")
                        .HasColumnType("real")
                        .HasColumnName("crit_chance");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("player_stats");
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.UserStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Clicks")
                        .HasColumnType("integer")
                        .HasColumnName("clicks");

                    b.Property<int>("MonstersKilled")
                        .HasColumnType("integer")
                        .HasColumnName("monsters_killed");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_statistic");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MonsterClickerAPI.Enumfolder.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MonsterClickerAPI.Enumfolder.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MonsterClickerAPI.Enumfolder.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.MonsterItemTable", b =>
                {
                    b.HasOne("MonsterClickerAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonsterClickerAPI.Models.Monster", "Monster")
                        .WithMany()
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.MonsterStats", b =>
                {
                    b.HasOne("MonsterClickerAPI.Models.Monster", "Monster")
                        .WithMany()
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.PlayerInventory", b =>
                {
                    b.HasOne("MonsterClickerAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonsterClickerAPI.Enumfolder.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.PlayerStats", b =>
                {
                    b.HasOne("MonsterClickerAPI.Enumfolder.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("MonsterClickerAPI.Models.UserStats", b =>
                {
                    b.HasOne("MonsterClickerAPI.Enumfolder.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
